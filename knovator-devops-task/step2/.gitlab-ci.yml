stages:
  - build
  - push
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  IMAGE_PREFIX: "$CI_REGISTRY_IMAGE"
  APP_VERSION: "${CI_COMMIT_SHORT_SHA}"
  DOCKER_BUILDKIT: "1"

build-images:
  stage: build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build -t "$IMAGE_PREFIX/api:$APP_VERSION" -t "$IMAGE_PREFIX/api:latest" ./step1/node
    - docker build -t "$IMAGE_PREFIX/frontend:$APP_VERSION" -t "$IMAGE_PREFIX/frontend:latest" ./step1/react

push-images:
  stage: push
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  dependencies: [build-images]
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker push "$IMAGE_PREFIX/api:$APP_VERSION"
    - docker push "$IMAGE_PREFIX/api:latest"
    - docker push "$IMAGE_PREFIX/frontend:$APP_VERSION"
    - docker push "$IMAGE_PREFIX/frontend:latest"

deploy-prod:
  stage: deploy
  image: alpine:3.20
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  tags: [vm-runner]
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$DEPLOY_SSH_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - printf "Host *\n  StrictHostKeyChecking no\n" > ~/.ssh/config
  script:
    - scp -o StrictHostKeyChecking=no -r step2/deploy/* "$DEPLOY_USER@$DEPLOY_HOST:~/app/"
    - ssh "$DEPLOY_USER@$DEPLOY_HOST" "cd ~/app && export CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE && export APP_VERSION=$APP_VERSION && bash scripts/deploy.sh"
